// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recipe {
  id           String       @id @default(cuid())
  name         String
  description  String?
  prepTime     String?
  image        String?
  instructions String[]
  chefInstructions String[]
  status       String       @default("published") // published, draft
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  ingredients  Ingredient[]
  selections   Selection[]
  categories   Category[]
  list List[]
}

model RecipeRequest {
  id          String   @id @default(cuid())
  name        String
  description String
  link        String?
  email       String
  status      String   @default("pending") // pending, approved, rejected
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id         String    @id @default(cuid())
  name       String
  image      String    @default("https://plus.unsplash.com/premium_photo-1673108852141-e8c3c22a4a22?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D")
  recipes    Recipe[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Ingredient {
  id         String   @id @default(cuid())
  name       String
  quantity   String  @default("1")
  unit       String
  recipeId   String?
  isCreated  Boolean @default(false)
  recipe     Recipe?   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([recipeId])
}

model Selection {
  id        String   @id @default(cuid())
  userId    String
  recipeId  String
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([recipeId])
}

model List {
  id        String   @id @default(cuid())
  name String
  email String
  Date DateTime
  recipes Recipe[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shoppingListItems ShoppingListItem[]
}

model Unit {
  id        String   @id @default(cuid())
  name      String   @unique
  symbol    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id        String   @id @default(cuid())
  content   String
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShoppingListItem {
  id        String   @id @default(cuid())
  name      String
  quantity  String
  unit      String
  category  String
  isChecked Boolean  @default(false)
  listId    String
  list      List     @relation(fields: [listId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([listId])
}